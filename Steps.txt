print("Hello, world!")
var myVariable = 42
myVariable = 50
let myConstant = 42
control flow:
for score in individualScores {
    if score > 50 {
        teamScore += 3
    } else {
        teamScore += 1
    }
}

handle optional values:
let nickName: String? = nil
let nickName: String? = nil
let informalGreeting = "Hi \(nickName ?? fullName)"

switches:
let vegetable = "red pepper"
switch vegetable {
case "celery":
    print("Add some raisins and make ants on a log.")
case "cucumber", "watercress":
    print("That would make a good tea sandwich.")
case let x where x.hasSuffix("pepper"):
    print("Is it a spicy \(x)?")
default:
    print("Everything tastes good in soup.")
}


for in:
for (kind, numbers) in interestingNumbers {
    for number in numbers {
        if number > largest {
            largest = number
        }
    }
}

class:
class Shape {
    var numberOfSides = 0
    func simpleDescription() -> String {
        return "A shape with \(numberOfSides) sides."
    }
}

https://docs.swift.org/swift-book/GuidedTour/GuidedTour.html    ///reference..

functions:
func greet(person: String, day: String) -> String {
    return "Hello \(person), today is \(day)."
}
greet(person: "Bob", day: "Tuesday")


main symbol is “?” to define variables as an Optional, It means, that can be nil
Forcibly Unwrapping:
You can unwrap your Optional variable with “!” operator but it’s a less safe wrapping way
var moviesCount: Int?

print(moviesCount!)

// Fatal error: Unexpectedly found nil while unwrapping an Optional value

2 - Conditional Unwrapping
You can unwrap your Optional variable with if let statement
var songName: String?

if let songName = songName {
    // it means, if the unwrapped value is not nil
    /*
        WRITE SOMETHING HERE
    */
}
else {
    print("songName is nil")
}

3 - Unwrapping via Type Casting
var userData: Any? = 1

if userData as? String != nil {
    print("userData is defined as a String.")
}
else if userData as? Int != nil {
    print("userData is defined as an Integer.")
}

4 - Implicitly Unwrapping
It means, when defining the variable with exclamation mark then use in somewhere, your variable will be unwrapped automatically

import UIKit

// Forcibly Unwrapping Begin
var name: String? = "Batuhan"

name!

// Forcibly Unwrapping End
// Implicitly Unwrapping Begin
let age: Int! = 20
age

// Implicitly Unwrapping End

https://medium.com/whoknows-swift/swift-what-is-the-optional-binding-7624c7f9098e\
https://github.com/vsouza/awesome-ios
https://developer.apple.com/swift/
https://docs.swift.org/swift-book/GuidedTour/GuidedTour.html   // swift tour...
https://docs.swift.org/swift-book/LanguageGuide/TheBasics.html  // language guide.....
https://www.raywenderlich.com/2690-learn-to-code-ios-apps-1-welcome-to-programming //raywender....

Mobility:
8 years to 10 years of experience in delivering Mobility based enterprise applications.
Lead agile teams, consisting of resources across the organization, needed to deliver on prioritized projects and work efforts. 
Understand and practice servant leadership, putting needs of others first and helps people develop and perform as highly as possible.
Should have solid knowledge in agile PM tools in Rally, JIRA, etc .. 
Should have solid knowledge in all scrum ceremonies.
Manage the team's activities to ensure timely completion of tasks. 
Remove team impediments. 
Identify and communicate potential risks to the completion of the sprints and releases, including resource, cost, and system. 
Independently develops corrective actions necessary to mitigate most issues and reviews with management for confirmation prior to execution.
Facilitate project kick off/review release planning, sprint planning, daily stand up meetings, sprint reviews/demos, retrospectives for agile teams. 
Present in a variety of informal settings: one on one, small groups, with peers and functional managers. 
Present to director level and below.
Should have manageable knowledge in mobility eco systems on Android, iOS, Windows etc.
Must have delivered minimum 2-3 large scale mobility projects successfully using Agile project execution methodology.
Good to have knowledge in any two MADPs (Mobile Application Development Platforms ) like SMP, Mobile Fabric, IBM Mobile First.
Should have high level idea of technical tools like XCODE, Android Studio, Obj C, Swift, HTML5 etc..
[www.google.com]
what is a computer...
# why it needs to be in evry home..
# what it enhances at the home..
# what change does it makes in once life...
# is desktop better or lap top..
# how to configure..
# how to connect with the net..
# can it be used as a memory device..
# can it be used like that..
# populat git repos....
https://github.com/trimstray/the-book-of-secret-knowledge
https://github.com/hangtwenty/dive-into-machine-learning
https://github.com/andrew--r/channels
https://www.youtube.com/freecodecamp
https://github.com/toddmotto/public-apis#books
https://github.com/FAQGURU/FAQGURU
https://github.com/opsmop/opsmop
https://github.com/i0natan/nodebestpractices
https://github.com/Snailclimb/JavaGuide
https://github.com/h5bp/Front-end-Developer-Interview-Questions
https://github.com/9magnets/iOS-Developer-and-Designer-Interview-Questions
